package icons

import (
	"strings"

	"github.com/nosvagor/hgmx-builder/views/components/icon"
	"github.com/nosvagor/hgmx-builder/views/components/icon/icons"
)

templ Main(results []*icons.IconDetails) {
	<header class="sticky top-0 z-10 backdrop-blur">
		<div class="max-w-7xl mx-auto px-4 py-5 grid gap-3">
			<form role="search" aria-label="Search icons" class="flex justify-center">
				<input
					type="search"
					name="q"
					hx-get="/icons/search"
					hx-target="#icons-grid"
					hx-swap="innerHTML"
					hx-trigger="keyup changed delay:200ms"
					placeholder="Search icons"
					autocomplete="off"
					class="w-full max-w-xl px-4 py-3 rounded-xl border border-current bg-transparent placeholder:opacity-70 focus:outline-none"
				/>
			</form>
		</div>
	</header>
	<section class="px-4 py-6">
		<div id="icons-grid" class="grid [grid-template-columns:repeat(auto-fill,minmax(10rem,1fr))] auto-rows-[12rem] gap-2 items-start justify-items-center">
			@List(results)
		</div>
	</section>
}

templ List(results []*icons.IconDetails) {
	for _, i := range results {
		<div
			class="relative w-full max-w-40 h-full cursor-pointer rounded-xl border border-surface-400/10 bg-gradient-to-b from-surface-400/5 to-surface-400/10 overflow-hidden transition-all duration-300 group hover:border-surface-400/20 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary-400/40"
			style="clip-path: inset(0 round 0.75rem);"
			_="on mouseenter or mousedown or touchstart queue none send hovered to first <svg/> in me then wait 420ms"
			tabindex="0"
		>
			<div class="flex flex-col items-center justify-center gap-2 h-full py-4">
				@icon.Render(&i.Icon, "text-5xl group-hover:text-[5rem] transition-all")
				<div class="text-sm font-semibold text-primary-100/90 leading-tight text-center truncate w-full px-3">{ i.Icon.Name }</div>
			</div>
			<div class="absolute inset-x-0 top-0 -translate-y-full group-hover:translate-y-0 group-focus-visible:translate-y-0 transition-transform duration-300 ease-out">
				<div class="px-3 py-1 bg-surface-400/10 backdrop-blur-sm border-b border-surface-400/10 text-center text-xs rounded-t-xl">
					if len(i.Categories) > 0 {
						<div class="truncate">{ strings.Join(i.Categories, ", ") }</div>
					}
				</div>
			</div>
			<div class="absolute inset-x-0 bottom-0 translate-y-full group-hover:translate-y-0 group-focus-visible:translate-y-0 transition-transform">
				<div class="px-3 py-2 pb-4 bg-surface-400/10 backdrop-blur-sm border-t border-surface-400/10 text-center text-xs rounded-b-xl">
					if len(i.Tags) > 0 {
						<div class="truncate">{ strings.Join(i.Tags, ", ") }</div>
					}
				</div>
			</div>
			if len(i.Contributors) > 0 {
				<div class="pointer-events-none absolute bottom-1 right-2 opacity-0 -translate-x-2 group-hover:opacity-70 group-hover:translate-x-0 group-focus-visible:opacity-70 group-focus-visible:translate-x-0 transition-all duration-300 text-[0.5em] text-primary-400">
					{ strings.Join(i.Contributors, ", ") }
				</div>
			}
		</div>
	}
}
