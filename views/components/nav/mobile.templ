package nav

import "github.com/nosvagor/hgmx-builder/views/components/icon"

var mobileMenuControllerScript = templ.NewOnceHandle()

templ mobileMenuController() {
	@mobileMenuControllerScript.Once() {
		<script type="module">
		import { animate, easeOut } from "/static/scripts/motion.min.js";
		import { τmid, τmin } from "/static/scripts/constants.js";
		const τ = { duration: τmid, ease: easeOut };

		const mobileMenu = document.getElementById('mobile-menu-trigger');

		function toggleMobileMenu() {
			const open = mobileMenu.classList.contains('mobile-menu-open');
			const expandedMenu = document.getElementById('mobile-menu-expanded');
			const nav = document.getElementById('mobile-nav');
			const popoutBehavior = ['absolute', 'bottom-4', 'right-0', 'pr-8', 'pl-4', 'scale-135'];

			function closeMenu() {
				mobileMenu.classList.remove('mobile-menu-open');
				setMobileMenuIcon('hamburger');

				setTimeout(() => {
					mobileMenu.classList.remove(...popoutBehavior);
					mobileMenu.classList.add('w-full');
				}, τmid*1000 - 100);

				const textSpans = nav.querySelectorAll('.mobile-bookmark-text');
				animate(textSpans, { opacity: 0 }, τ)
				animate(expandedMenu, { height: 0 }, τ)
			}


			function openMenu() {
				mobileMenu.classList.add('mobile-menu-open');
				mobileMenu.classList.add(...popoutBehavior);
				mobileMenu.classList.remove('w-full');
				setMobileMenuIcon('close');

				const textSpans = nav.querySelectorAll('.mobile-bookmark-text');
				animate(textSpans, { opacity: 1 }, τ);

				const targetHeight = expandedMenu.scrollHeight;
				animate(expandedMenu, { height: [0, targetHeight] }, τ);
			}

			open ? closeMenu() : openMenu();
		}

		function setMobileMenuIcon(icon) {
			const top = document.getElementById('mobile-menu-top');
			const mid = document.getElementById('mobile-menu-mid');
			const bot = document.getElementById('mobile-menu-bot');
			const t = { duration: τmid, ease: easeOut };

			const iconPaths = {
				hamburger: {
					top: "M 3,7 C 8,7 16,7 21,7",
					mid: "M 3,12 C 8,12 16,12 21,12",
					bot: "M 3,17 C 8,17 16,17 21,17",
				},
				close: {
					top: "M 6,6 C 9,9 15,15 18,18",
					mid: "M 26,12 C 26,12 26,12 26,12",
					bot: "M 6,18 C 9,15 15,9 18,6",
				}
			};
		

			const rotate = icon === 'close' ? [0, -90, -90, -90] : [-90, -90, 15, 0];
			const ease = icon === 'close' ? 'easeIn' : 'easeOut';
			const opacity = icon === 'close' ? [1, 0] : [0.5, 1];
			const delay = icon === 'close' ? 0 : τmin;
			animate(top, { d: iconPaths[icon].top}, t);
			animate(mid, { d: iconPaths[icon].mid, opacity: opacity, rotate: rotate }, { duration: τmid, ease: ease, delay: delay });
			animate(bot, { d: iconPaths[icon].bot}, t);
		}

		mobileMenu.toggleMobileMenu = toggleMobileMenu;
		mobileMenu.setMobileMenuIcon = setMobileMenuIcon;
		</script>
	}
}

templ (p *Props) MobileNav() {
	@mobileMenuController()
	<div
		class="fixed inset-0 z-40 opacity-0 md:hidden"
		_={ `on click call #mobile-menu-trigger.toggleMobileMenu() end` }
	></div>
	<nav
		id="mobile-nav"
		class="flex fixed right-0 bottom-0 left-0 z-50 flex-col backdrop-blur-md bg-base-600/96 md:hidden"
	>
		@p.MobileBookmarks()
		@p.MobileMenuExpanded()
	</nav>
}

templ (p *Props) MobileBookmarks() {
	<div
		id="mobile-bookmarks"
		class="flex flex-1 justify-between border-t border-base-300"
		hx-target="#main"
		hx-swap="outerHTML"
		hx-push-url="true"
	>
		for _, link := range p.BookmarksMobile {
			@mobileBookmark(link)
		}
		@p.MobileMenuIcon()
	</div>
}

templ mobileBookmark(link Link) {
	<div
		hx-get={ link.Route() }
		class="flex flex-col justify-center items-center py-2 w-full text-2xl cursor-pointer hover:text-primary-401 active:text-primary-401"
	>
		@icon.Icon(link.Icon).Render()
		<span class="mobile-bookmark-text text-sm font-semibold -mb-5 opacity-0">{ link.Text() }</span>
	</div>
}

templ (p *Props) MobileMenuIcon() {
	<div
		id="mobile-menu-trigger"
		class="flex justify-center items-center py-2 -mb-1 w-full cursor-pointer hover:text-primary-401 active:text-primary-401"
		_={ `on click call me.toggleMobileMenu() end` }
	>
		<svg viewBox="0 0.5 24 24" width="2.25em" height="2.25em" fill="none" stroke="currentColor" stroke-width="1" stroke-linecap="round" class="z-50">
			<path id="mobile-menu-top" d="M 3,7 C 8,7 16,7 21,7"></path>
			<path id="mobile-menu-mid" d="M 3,12 C 8,12 16,12 21,12"></path>
			<path id="mobile-menu-bot" d="M 3,17 C 8,17 16,17 21,17"></path>
		</svg>
	</div>
}

templ (p *Props) MobileMenuExpanded() {
	<div id="mobile-menu-expanded" class="overflow-hidden h-0">
		<div class="px-6 py-4 h-[50vh]">
			<h2 class="text-lg font-semibold">Mobile Menu</h2>
			<p class="text-sm">This should expand smoothly!</p>
		</div>
	</div>
}
