// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package nav

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/nosvagor/hgmx-builder/views/components/button"
	"github.com/nosvagor/hgmx-builder/views/components/icon"
)

var menuControllerScript = templ.NewOnceHandle()

func (p *Props) menuController() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script type=\"module\">\n\t\t\timport { animate, stagger } from \"/static/scripts/motion.min.js\";\n\t\t\t\n\t\t\tconst menu = document.getElementById('nav-menu');\n\t\t\tlet currentIcon = 'hamburger';\n\t\t\tlet menuDelayTimer;\n\t\t\t\n\t\t\tfunction firstSegment(path) {\n\t\t\t\treturn (path || '').replace(/\\/+$/, '').split('/').filter(Boolean)[0] || '';\n\t\t\t}\n\t\t\t\n\t\t\tfunction updateActiveBookmarks() {\n\t\t\t\tconst currentSeg = firstSegment(window.location.pathname);\n\t\t\t\tconst containers = [\n\t\t\t\t\tdocument.getElementById('navbar-bookmarks'),\n\t\t\t\t\tdocument.getElementById('menu-bookmarks'),\n\t\t\t\t\tdocument.getElementById('menu-account'),\n\t\t\t\t].filter(Boolean);\n\n\t\t\t\tcontainers.forEach(container => {\n\t\t\t\t\tconst buttons = Array.from(container.querySelectorAll('button'));\n\t\t\t\t\tbuttons.forEach(btn => {\n\t\t\t\t\t\tconst hx = btn.getAttribute('hx-get') || '';\n\t\t\t\t\t\tconst hrefSeg = firstSegment(hx);\n\t\t\t\t\t\tconst isActive = hrefSeg && currentSeg === hrefSeg;\n\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\tbtn.classList.add('text-accent-401');\n\t\t\t\t\t\t\tbtn.classList.add('bookmark-active');\n\t\t\t\t\t\t\tbtn.dataset.active = 'true';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbtn.classList.remove('text-accent-401');\n\t\t\t\t\t\t\tbtn.classList.remove('bookmark-active');\n\t\t\t\t\t\t\tbtn.dataset.active = 'false';\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst iconPaths = {\n\t\t\t\tuser: {\n\t\t\t\t\ttop: \"M 7,6 C 7,0, 17,0, 17,6\",\n\t\t\t\t\tmid: \"M 7,6 C 7,12, 17,12, 17,6\",\n\t\t\t\t\tbot: \"M 4,20 C 4,14, 20,14, 20,20\",\n\t\t\t\t},\n\t\t\t\thamburger: {\n\t\t\t\t\ttop: \"M 3,7 C 8,7 16,7 21,7\",\n\t\t\t\t\tmid: \"M 3,12 C 8,12 16,12 21,12\",\n\t\t\t\t\tbot: \"M 3,17 C 8,17 16,17 21,17\",\n\t\t\t\t},\n\t\t\t\tclose: {\n\t\t\t\t\ttop: \"M 6,6 C 9,9 15,15 18,18\",\n\t\t\t\t\tmid: \"M 26,12 C 26,12 26,12 26,12\",\n\t\t\t\t\tbot: \"M 6,18 C 9,15 15,9 18,6\",\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tfunction setMenuIcon(icon) {\n\t\t\t\tconst top = document.getElementById('menu-top');\n\t\t\t\tconst mid = document.getElementById('menu-mid');\n\t\t\t\tconst bot = document.getElementById('menu-bot');\n\t\t\t\tconst t = { duration: 0.3, ease: \"easeOut\" };\n\n\t\t\t\tanimate(top, { d: iconPaths[icon].top }, t);\n\t\t\t\tanimate(mid, { d: iconPaths[icon].mid }, t);\n\t\t\t\tanimate(bot, { d: iconPaths[icon].bot }, t);\n\t\t\t\tcurrentIcon = icon;\n\t\t\t}\n\n\t\t\tfunction animateBookmarksOut() {\n\t\t\t\tconst container = document.getElementById('navbar-bookmarks');\n\t\t\t\tif (!container) return;\n\t\t\t\tif (container.dataset.state === 'out') return;\n\t\t\t\tconst items = Array.from(container.querySelectorAll(':scope > button'));\n\t\t\t\tif (!items.length) return;\n\n\t\t\t\tcontainer.dataset.state = 'out';\n\n\t\t\t\titems.forEach((el, i) => {\n\t\t\t\t\tconst rect = el.getBoundingClientRect();\n\t\t\t\t\tconst dl = 0 - rect.left;\n\t\t\t\t\tanimate(el, \n\t\t\t\t\t\t{ x: [0, dl], scale: [1, 1, 1, 1, 1.25, 0] }, \n\t\t\t\t\t\t{ delay: i * 0.069, ease: \"easeInOut\" }\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction animateBookmarksIn() {\n\t\t\t\tconst container = document.getElementById('navbar-bookmarks');\n\t\t\t\tif (!container) return;\n\t\t\t\tif (container.dataset.state === 'in') return;\n\t\t\t\tconst items = Array.from(container.querySelectorAll(':scope > button'));\n\t\t\t\tif (!items.length) return;\n\n\t\t\t\tcontainer.dataset.state = 'in';\n\n\t\t\t\tanimate(items, { x: 0, scale: 1 }, { delay: stagger(0.03), type: 'spring', bounce: 0.4, duration: 0.5 })\n\t\t\t}\n\n\t\t\tfunction toggleMenu() {\n\t\t\t\tconst open = menu.classList.contains('menu-open');\n\t\t\t\tconst expandedMenu = document.getElementById('nav-menu-expanded');\n\t\t\t\tconst menuBackdrop = document.getElementById('menu-backdrop');\n\t\t\t\tconst menuBg = document.getElementById('menu-bg');\n\n\t\t\t\tfunction closeMenu() {\n\t\t\t\t\tmenu.classList.remove('menu-open');\n\t\t\t\t\tsetMenuIcon('hamburger');\n\n\t\t\t\t\tif (window.scrollY === 0) {\n\t\t\t\t\t\tanimateBookmarksIn();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst escIndicator = document.getElementById('esc-indicator');\n\t\t\t\t\tif (escIndicator) {\n\t\t\t\t\t\tanimate(escIndicator, { width: '0ch', opacity: 0, transform: 'translate(-100%)' }, { duration: 0.15, easing: 'steps(1, end)' });\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\texpandedMenu.style.pointerEvents = 'none';\n\t\t\t\t\tanimate(menuBackdrop, { opacity: 0 }, { duration: 0.16, delay: 0.1 });\n\t\t\t\t\tanimate(menuBg, { transform: 'translateX(-100%)' }, { type: 'spring', bounce: 0.2, duration: 0.25 });\n\t\t\t\t}\n\n\t\t\t\tfunction openMenu() {\n\t\t\t\t\tmenu.classList.add('menu-open');\n\t\t\t\t\tsetMenuIcon('close');\n\n\t\t\t\t\tif (window.scrollY === 0) {\n\t\t\t\t\t\tanimateBookmarksOut();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\texpandedMenu.style.pointerEvents = 'auto'; \n\t\t\t\t\tanimate(menuBackdrop, { opacity: 1 }, { duration: 0.25 });\n\t\t\t\t\tanimate(menuBg, { transform: 'translateX(0%)' }, { type: 'spring', bounce: 0.2, duration: 0.42 })\n\n\t\t\t\t\tconst escIndicator = document.getElementById('esc-indicator');\n\t\t\t\t\tif (escIndicator && menu.classList.contains('menu-open')) {\n\t\t\t\t\t\tescIndicator.style.width = '0ch';\n\t\t\t\t\t\tescIndicator.style.overflow = 'hidden';\n\t\t\t\t\t\tescIndicator.style.whiteSpace = 'nowrap';\n\t\t\t\t\t\tanimate(escIndicator, { opacity: 1, transform: 'translate(0)' }, { duration: 0.2, ease: \"easeOut\" });\n\t\t\t\t\t\tanimate(escIndicator, { width: '3ch' }, { duration: 0.4, easing: 'steps(3, end)', delay: 0.05 });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\topen ? closeMenu() : openMenu();\n\t\t\t}\n\n\t\t\tfunction delayedMenu(delay = 3000) {\n\t\t\t\tconst menuOpen = menu.classList.contains('menu-open');\n\t\t\t\tif (menuOpen) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tclearTimeout(menuDelayTimer);\n\n\t\t\t\tconst scrollPosition = window.scrollY;\n\t\t\t\tif (scrollPosition === 0) {\n\t\t\t\t\tsetMenuIcon('user');\n\t\t\t\t}\n\n\t\t\t\tmenuDelayTimer = setTimeout(() => {\n\t\t\t\t\tif (currentIcon === 'user') {\n\t\t\t\t\t\tsetMenuIcon('hamburger');\n\t\t\t\t\t}\n\t\t\t\t}, delay);\n\t\t\t}\n\n\t\t\tmenu.delayedMenu = delayedMenu;\n\t\t\tmenu.setMenuIcon = setMenuIcon;\n\t\t\tmenu.toggleMenu = toggleMenu;\n\t\t\tmenu.getCurrentIcon = () => currentIcon;\n\t\t\tmenu.animateBookmarksOut = animateBookmarksOut;\n\t\t\tmenu.animateBookmarksIn = animateBookmarksIn;\n\t\t\tmenu.updateActiveBookmarks = updateActiveBookmarks;\n\n\t\t\tupdateActiveBookmarks();\n\t\t\twindow.addEventListener('popstate', updateActiveBookmarks);\n\t\t\tdocument.addEventListener('htmx:afterSwap', (e) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst target = e?.detail?.target;\n\t\t\t\t\tif (!target) return;\n\t\t\t\t\tif (target.id === 'main') updateActiveBookmarks();\n\t\t\t\t} catch {}\n\t\t\t});\n\t\t\tdocument.addEventListener('htmx:pushedIntoHistory', updateActiveBookmarks);\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = menuControllerScript.Once().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func (p *Props) menuHyperscript() string {
	return `
	on click or keydown[key is 'Enter' or key is ' ']
		halt the event
		call me.toggleMenu()
	end

	on click from elsewhere
		if me.matches('.menu-open') and not event.target.closest('#menu-bg')
			call me.toggleMenu()
		end
	end

	on htmx:afterRequest from window
		if me.matches('.menu-open')
			call me.toggleMenu()
		end
	end 

	on mouseenter
		if me.getCurrentIcon() is 'user'
			call me.setMenuIcon('hamburger')
		end
	end

	on keydown[key is 'Escape'] from window
		if me.matches('.menu-open')
			call me.toggleMenu()
			exit
		end

		set now to Date.now()
		if now - me.lastEscapeTime < 500
			call me.toggleMenu()
			set me.lastEscapeTime to 0
		else
			set me.lastEscapeTime to now
		end
	end
	`
}

func (p *Props) Menu() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div id=\"nav-menu\" tabindex=\"0\" class=\"hidden fixed top-2 left-4 z-50 justify-center items-center p-1.5 rounded-full cursor-pointer outline-none md:flex bg-base-600 text-secondary-601 hover:text-primary-401\" _=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(p.menuHyperscript())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/components/nav/menu.templ`, Line: 249, Col: 25}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = p.menuController().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<svg viewBox=\"0 0 24 24\" width=\"1.5rem\" height=\"1.5rem\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\"><path id=\"menu-top\" d=\"M 3,7 C 8,7 16,7 21,7\"></path> <path id=\"menu-mid\" d=\"M 3,12 C 8,12 16,12 21,12\"></path> <path id=\"menu-bot\" d=\"M 3,17 C 8,17 16,17 21,17\"></path></svg> <kbd id=\"esc-indicator\" class=\"absolute top-2.5 left-8 text-[0.625rem] font-mono pointer-events-none opacity-0\" style=\"transform: translate(-100%);\">esc</kbd></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = p.MenuExpanded().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func (p *Props) MenuExpanded() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var5 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var5 == nil {
			templ_7745c5c3_Var5 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "<div id=\"nav-menu-expanded\" class=\"hidden md:block fixed inset-0 z-40 pointer-events-none h-svh\"><div id=\"menu-backdrop\" class=\"absolute inset-0 opacity-0 backdrop-blur min-h-svh bg-black/10 cursor-w-resize\"></div><div id=\"menu-bg\" class=\"flex absolute top-0 left-0 flex-col justify-between rounded-br-[3rem] rounded-tr-[3rem] border-r-1 border-base-700 shadow-sm px-4 pt-12 pb-8 h-full min-w-fit bg-base-600\" style=\"transform: translateX(-100%);\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = p.MenuBookmarks().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = p.MenuAccount().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "</div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func (p *Props) MenuBookmarks() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var6 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var6 == nil {
			templ_7745c5c3_Var6 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		if p.Bookmarks != nil {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<div id=\"menu-bookmarks\" class=\"flex flex-col gap-4\" hx-target=\"#main\" hx-swap=\"outerHTML\" hx-push-url=\"true\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = p.Logo.Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, link := range p.Bookmarks {
				templ_7745c5c3_Err = button.GetCustom(link.Route(), icon.Text(link.Icon, link.Text()), button.Primary, "justify-start").Render(ctx, templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		return nil
	})
}

func (p *Props) MenuAccount() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var7 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var7 == nil {
			templ_7745c5c3_Var7 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<div id=\"menu-account\" class=\"flex flex-col gap-2 w-full\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = p.Account.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = p.Settings.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
