// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package nav

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

var scrollControllerScript = templ.NewOnceHandle()

func scrollController() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script type=\"module\">\n\t\t\tconst nav = document.getElementById('navbar');\n\t\t\tconst menu = document.getElementById('nav-menu');\n\n\t\t\tlet hidden = false, fullyHidden = false;\n\t\t\tlet lastY = window.scrollY;\n\t\t\tlet lastTick = performance.now();\n\t\t\tlet direction = null;\n\t\t\tlet Σd = 0, Σu = 0;\n\n\t\t\tconst δd = 500, δr = 1400, δu = 800;\n\t\t\tconst τ = 500, μν = 9; \n\n\t\t\tconst reset = (y, t) => { lastY = y; lastTick = t; Σd = 0; Σu = 0; hidden = false; fullyHidden = false; };\n\n\t\t\tconst hide = () => {\n\t\t\t\tif (!nav || hidden) return;\n\t\t\t\tmenu.animateBookmarksOut();\n\t\t\t\thidden = true;\n\t\t\t};\n\n\t\t\tconst hideFully = () => {\n\t\t\t\tif (!nav || fullyHidden) return;\n\t\t\t\tnav.classList.add('navbar_hidden');\n\t\t\t\tfullyHidden = true;\n\t\t\t};\n\n\t\t\tconst reveal = () => {\n\t\t\t\tif (!nav || !hidden) return;\n\t\t\t\tif (fullyHidden) {\n\t\t\t\t\tnav.classList.remove('navbar_hidden');\n\t\t\t\t\tfullyHidden = false;\n\t\t\t\t}\n\t\t\t\tmenu.animateBookmarksIn();\n\t\t\t\tmenu.delayedMenu();\n\t\t\t\thidden = false;\n\t\t\t};\n\n\t\t\tfunction onScroll() {\n\t\t\t\tif (!nav || menu.classList.contains('menu-open')) return;\n\n\t\t\t\tconst y = window.scrollY;\n\t\t\t\tconst t = performance.now();\n\n\t\t\t\tif (y <= 1) {\n\t\t\t\t\tnav.classList.remove('navbar_scrolling');\n\t\t\t\t\treveal();\n\t\t\t\t\treset(y, t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst doc = document.documentElement;\n\t\t\t\tconst atBottom = Math.ceil(y + window.innerHeight) >= doc.scrollHeight;\n\t\t\t\tif (atBottom && hidden) {\n\t\t\t\t\treveal();\n\t\t\t\t\treset(y, t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tnav.classList.add('navbar_scrolling');\n\n\t\t\t\tconst Δy = y - lastY;\n\t\t\t\tconst Δt = t - lastTick;\n\n\t\t\t\tconst ν = Δt > 0 ? Math.abs(Δy) / Δt : 0;\n\n\t\t\t\tif (ν <= μν) {\n\t\t\t\t\tif (Δy > 0) {\n\t\t\t\t\t\tif (direction !== 'down' || Δt > τ) Σd = 0;\n\t\t\t\t\t\tΣd += Δy;\n\t\t\t\t\t\tΣu = 0;\n\t\t\t\t\t\tif (Σd >= δr && !fullyHidden) {\n\t\t\t\t\t\t\thideFully();\n\t\t\t\t\t\t} else if (Σd >= δd && !hidden) {\n\t\t\t\t\t\t\thide();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdirection = 'down';\n\t\t\t\t\t} else if (Δy < 0) {\n\t\t\t\t\t\tif (direction !== 'up' || Δt > τ) Σu = 0;\n\t\t\t\t\t\tΣu += -Δy;\n\t\t\t\t\t\tΣd = 0;\n\t\t\t\t\t\tif (Σu >= (δu) && hidden) {\n\t\t\t\t\t\t\treveal();\n\t\t\t\t\t\t\tΣu = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdirection = 'up';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlastY = y;\n\t\t\t\tlastTick = t;\n\t\t\t}\n\n\t\t\t(function init() {\n\t\t\t\tconst y = window.scrollY;\n\t\t\t\tlastY = y;\n\t\t\t\tlastTick = performance.now();\n\t\t\t\tif (!nav) return;\n\t\t\t\tmenu.setMenuIcon('user');\n\t\t\t\tnav.classList.toggle('navbar_scrolling', y > 1);\n\t\t\t\tnav.classList.remove('navbar_hidden');\n\t\t\t\thidden = false;\n\t\t\t\tfullyHidden = false;\n\t\t\t\tmenu.delayedMenu();\n\t\t\t\twindow.addEventListener('scroll', onScroll, { passive: true });\n\t\t\t})();\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = scrollControllerScript.Once().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func (p *Props) styles() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<style>\n\t\t#navbar {\n\t\t\tbackground-color: color-mix(in oklab, var(--color-base-500) 95%, transparent);\n\t\t\tbackdrop-filter: blur(8px);\n\t\t}\n\t\t.navbar_hidden {\n\t\t\ttransform: translateY(-100%);\n\t\t}\n\t\t.navbar_scrolling {\n\t\t\tbox-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);\n\t\t\t--tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));\n\t\t}\n\n\t\t#navbar-bookmarks, #menu-bookmarks, #menu-account { position: relative; }\n\t\t#navbar-bookmarks button div > span, #menu-bookmarks button div > span, #menu-account button div > span { position: relative; }\n\t\t#navbar-bookmarks button div > span::after, #menu-bookmarks button div > span::after, #menu-account button div > span::after {\n\t\t\tcontent: \"\";\n\t\t\tposition: absolute;\n\t\t\tleft: 0;\n\t\t\tbottom: 1px;\n\t\t\twidth: 100%;\n\t\t\theight: 1px;\n\t\t\tbackground: currentColor;\n\t\t\tborder-radius: 2px;\n\t\t\topacity: 0;\n\t\t\ttransform: scaleX(0);\n\t\t\ttransition: transform 0.42s cubic-bezier(0.22, 1, 0.36, 1), opacity 0.27s ease-out;\n\t\t}\n\t\t#navbar-bookmarks button.bookmark-active div > span::after, #menu-bookmarks button.bookmark-active div > span::after, #menu-account button.bookmark-active div > span::after {\n\t\t\topacity: 1;\n\t\t\ttransform: scaleX(1.05);\n\t\t}\n\t\t#navbar-bookmarks button[data-active=\"true\"]:hover,\n\t\t#menu-bookmarks button[data-active=\"true\"]:hover,\n\t\t#menu-account button[data-active=\"true\"]:hover {\n\t\t\tcolor: var(--color-accent-401);\n\t\t}\n\t</style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func (p *Props) Navbar() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var4 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var4 == nil {
			templ_7745c5c3_Var4 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = scrollController().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = p.styles().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<nav id=\"navbar\" class=\"z-30 flex w-full sticky top-0 items-center justify-between px-4 pl-14 py-2 pt-3 transition ease-in-out isolate\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = p.NavbarBookmarks().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = p.Source.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "</nav>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
