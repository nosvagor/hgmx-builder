// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package nav

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/nosvagor/hgmx-builder/internal/utils"
	"github.com/nosvagor/hgmx-builder/views/components"
	"github.com/nosvagor/hgmx-builder/views/components/icon/icons"
)

type Props struct {
	components.Standard

	Bookmarks       []Link
	BookmarksMobile [3]Link
	Account         Link
	Settings        Link

	Logo   templ.Component
	Source templ.Component
}

func (p *Props) RemainingBookmarks() []Link {
	var remaining []Link
	mobileSet := make(map[string]bool)

	for _, mobileLink := range p.BookmarksMobile {
		mobileSet[mobileLink.Path] = true
	}

	for _, bookmark := range p.Bookmarks {
		if !mobileSet[bookmark.Path] {
			remaining = append(remaining, bookmark)
		}
	}

	return remaining
}

type Link struct {
	Path  string
	Icon  *icons.Icon
	Label string
}

func (l *Link) Route() string {
	return "/" + l.Path
}

func (l *Link) Text() string {
	if l.Label != "" {
		return l.Label
	}

	return utils.Title(l.Path)
}

func (p *Props) Render() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = p.Menu().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = p.Navbar().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = p.MobileNav().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
