package nav

var scrollControllerScript = templ.NewOnceHandle()

templ scrollController() {
	@scrollControllerScript.Once() {
		<script type="module">
			const nav = document.getElementById('navbar');
			const menu = document.getElementById('nav-menu');

			let hidden = false, fullyHidden = false;
			let lastY = window.scrollY;
			let lastTick = performance.now();
			let direction = null;
			let Σd = 0, Σu = 0;

			const δd = 500, δr = 1400, δu = 800;
			const τ = 500, μν = 9; 

			const reset = (y, t) => { lastY = y; lastTick = t; Σd = 0; Σu = 0; hidden = false; fullyHidden = false; };

			const hide = () => {
				if (!nav || hidden) return;
				menu.animateBookmarksOut();
				hidden = true;
			};

			const hideFully = () => {
				if (!nav || fullyHidden) return;
				nav.classList.add('navbar_hidden');
				fullyHidden = true;
			};

			const reveal = () => {
				if (!nav || !hidden) return;
				if (fullyHidden) {
					nav.classList.remove('navbar_hidden');
					fullyHidden = false;
				}
				menu.animateBookmarksIn();
				menu.delayedMenu();
				hidden = false;
			};

			function onScroll() {
				if (!nav || menu.classList.contains('menu-open')) return;

				const y = window.scrollY;
				const t = performance.now();

				if (y <= 1) {
					nav.classList.remove('navbar_scrolling');
					reveal();
					reset(y, t);
					return;
				}

				const doc = document.documentElement;
				const atBottom = Math.ceil(y + window.innerHeight) >= doc.scrollHeight;
				if (atBottom && hidden) {
					reveal();
					reset(y, t);
					return;
				}

				nav.classList.add('navbar_scrolling');

				const Δy = y - lastY;
				const Δt = t - lastTick;

				const ν = Δt > 0 ? Math.abs(Δy) / Δt : 0;

				if (ν <= μν) {
					if (Δy > 0) {
						if (direction !== 'down' || Δt > τ) Σd = 0;
						Σd += Δy;
						Σu = 0;
						if (Σd >= δr && !fullyHidden) {
							hideFully();
						} else if (Σd >= δd && !hidden) {
							hide();
						}
						direction = 'down';
					} else if (Δy < 0) {
						if (direction !== 'up' || Δt > τ) Σu = 0;
						Σu += -Δy;
						Σd = 0;
						if (Σu >= (δu) && hidden) {
							reveal();
							Σu = 0;
						}
						direction = 'up';
					}
				}

				lastY = y;
				lastTick = t;
			}

			(function init() {
				const y = window.scrollY;
				lastY = y;
				lastTick = performance.now();
				if (!nav) return;
				menu.setMenuIcon('user');
				nav.classList.toggle('navbar_scrolling', y > 1);
				nav.classList.remove('navbar_hidden');
				hidden = false;
				fullyHidden = false;
				menu.delayedMenu();
				window.addEventListener('scroll', onScroll, { passive: true });
			})();
		</script>
	}
}

templ (p *Props) styles() {
	<style>
		#navbar {
			background-color: color-mix(in oklab, var(--color-base-500) 95%, transparent);
			backdrop-filter: blur(8px);
		}
		.navbar_hidden {
			transform: translateY(-100%);
		}
		.navbar_scrolling {
			box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
			--tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
		}

		#navbar-bookmarks, #menu-bookmarks, #menu-account { position: relative; }
		#navbar-bookmarks button div > span, #menu-bookmarks button div > span, #menu-account button div > span { position: relative; }
		#navbar-bookmarks button div > span::after, #menu-bookmarks button div > span::after, #menu-account button div > span::after {
			content: "";
			position: absolute;
			left: 0;
			bottom: 1px;
			width: 100%;
			height: 1px;
			background: currentColor;
			border-radius: 2px;
			opacity: 0;
			transform: scaleX(0);
			transition: transform 0.42s cubic-bezier(0.22, 1, 0.36, 1), opacity 0.27s ease-out;
		}
		#navbar-bookmarks button.bookmark-active div > span::after, #menu-bookmarks button.bookmark-active div > span::after, #menu-account button.bookmark-active div > span::after {
			opacity: 1;
			transform: scaleX(1.05);
		}
		#navbar-bookmarks button[data-active="true"]:hover,
		#menu-bookmarks button[data-active="true"]:hover,
		#menu-account button[data-active="true"]:hover {
			color: var(--color-accent-401);
		}
	</style>
}

templ (p *Props) Navbar() {
	@scrollController()
	@p.styles()
	<nav
		id="navbar"
		class="z-30 flex w-full sticky top-0 items-center justify-between px-4 pl-14 py-2 pt-3 transition ease-in-out isolate"
	>
		@p.NavbarBookmarks()
		@p.Source
	</nav>
}
