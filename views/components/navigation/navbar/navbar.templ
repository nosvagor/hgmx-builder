package navbar

import (
	"github.com/nosvagor/hgmx-builder/views/components"
	"github.com/nosvagor/hgmx-builder/views/components/icons"
	"github.com/nosvagor/hgmx-builder/views/components/navigation/telescope"
	"github.com/nosvagor/hgmx-builder/views/utils/include"
)

type Props struct {
	Links             []PageLink
	Account, Settings PageLink
	CTA               components.Customizable
	Logo              components.Standard
}

func (p *Props) hyperscript() string {
	return `
		init
			if window.scrollY is 0 then
				remove .navbar_scrolling from me
			else
				add .navbar_scrolling to me
				call window.navbarScrolling(true)
			end
		end

		on scroll from window	
			get #navMenu
			if it and it.matches('.menu-open') then
				exit
			end
			if window.scrollY is 0 and me.matches('.navbar_scrolling') then
				remove .navbar_scrolling from me
				call window.navbarScrolling(false)
			else if window.scrollY > 0 and not me.matches('.navbar_scrolling') then
				add .navbar_scrolling to me
				call window.navbarScrolling(true)
			end
		end
	`
}

type PageLink struct {
	Icon  icons.Icon
	Label string
	Path  templ.SafeURL
}

templ Render(p *Props) {
	if p != nil {
		@include.ModuleScript("motion/navbar.js")
		<navbar
			class="flex sticky top-0 z-50 gap-4 justify-between items-center px-8 py-3 transition duration-200 ease-out"
			_={ p.hyperscript() }
		>
			<div class="flex gap-4 items-center">
				if p.Logo != nil {
					@p.Logo.Render()
				}
				if p.CTA != nil {
					@p.CTA.Render()
				}
			</div>
			<div class="flex gap-4 items-center">
				@telescope.Render()
				@Bookmarks(p.Links)
				@NavMenu(p)
			</div>
		</navbar>
		@ExpandedNavMenu(p.Links, p.Settings)
	}
}
