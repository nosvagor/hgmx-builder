// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package icons

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func UserCog() *Icon {
	return &Icon{
		Name:         "userCog",
		handler:      templ.NewOnceHandle(),
		script:       userCogAnimation,
		svg:          userCogContent,
		Tags:         []string{"user", "settings", "cog", "gear"},
		Categories:   []string{"people", "account", "tools"},
		Contributors: []string{"nosvagor", "lucide"},
	}
}

func userCogAnimation() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script type=\"module\">\n        import { animate } from \"/static/scripts/motion.min.js\";\n\t\twindow.userCogAnimate = (el) => {\n\t\t\tconst head = el.querySelector('circle[cx=\"9\"]');\n\t\t\tanimate(head, \n\t\t\t\t{ translateY: [1, -2, 0] },\n\t\t\t\t{ duration: 0.27, delay: 0.42, ease: \"easeOut\" }\n\t\t\t);\n\t\t\t\n\t\t\tconst body = el.querySelector('path[d*=\"15H6\"]');\n\t\t\tanimate(body, \n\t\t\t\t{ pathLength: [0, 1], opacity: [0, 1] },\n\t\t\t\t{ duration: 0.42, ease: \"easeOut\" }\n\t\t\t);\n\t\t\t\n\t\t\tconst gearGroup = el.querySelector('g.gear');\n\t\t\tanimate(gearGroup, \n\t\t\t\t{ scale: [0, 1.25, 1], rotate: [0, 360] },\n\t\t\t\t{ duration: 0.42, delay: 0.27, ease: \"easeOut\" }\n\t\t\t);\n\t\t}\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func userCogContent() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var3 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<path d=\"M10 15H6a4 4 0 0 0-4 4v2\"></path> <g transform=\"translate(-3.25, 0.75) scale(1.15)\"><g class=\"gear\"><path d=\"m14.305 16.53.923-.382\"></path> <path d=\"m15.228 13.852-.923-.383\"></path> <path d=\"m16.852 12.228-.383-.923\"></path> <path d=\"m16.852 17.772-.383.924\"></path> <path d=\"m19.148 12.228.383-.923\"></path> <path d=\"m19.53 18.696-.382-.924\"></path> <path d=\"m20.772 13.852.924-.383\"></path> <path d=\"m20.772 16.148.924.383\"></path> <circle cx=\"18\" cy=\"15\" r=\"3\"></circle></g></g> <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = svg().Render(templ.WithChildren(ctx, templ_7745c5c3_Var3), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
