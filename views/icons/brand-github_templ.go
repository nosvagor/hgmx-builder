// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package icons

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func BrandGithub() *Icon {
	return &Icon{
		Name:    "brandGithub",
		handler: templ.NewOnceHandle(),
		script:  brandGithubAnimation,
		svg:     brandGithubContent,
	}
}

func brandGithubAnimation() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script type=\"module\">\n\t\timport { animate, stagger } from \"/static/scripts/motion.min.js\";\n        window.brandGithubAnimate = (el) => {\n\t\tconst paths = el.querySelectorAll('path');\n\t\tconst tailPaths = Array.from(paths).slice(1);\n\t\tconst mainLogo = paths[0];\n\t\tconst group = el.querySelector('g');\n\n        animate(tailPaths,\n            { scale: [0, 2, 1] },\n            { delay: stagger(0.069), ease: \"easeOut\" }\n        );\n\n\t\tanimate(mainLogo,\n\t\t\t{ opacity: [0, 1] },\n\t\t\t{ duration: 0.42, ease: \"easeOut\" }\n\t\t);\n\n\t\tanimate(group,\n\t\t\t{ rotateY: [0, 360], scale: [1, 1.25, 1] },\n\t\t\t{ duration: 0.69, ease: \"easeOut\" }\n\t\t);\n\t};\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func brandGithubContent() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var3 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<g><path d=\"m 11.870,2.0000 c -5.5927,0 -9.8709,4.354 -9.8709,10.0908 0,4.586 2.814,8.511 6.8346,9.892 0.516,0.09 0.6975,-0.231 0.6975,-0.500 0,-0.256 -0.012,-1.670 -0.012,-2.53 0,0 -2.8225,0.620 -3.4153,-1.232 0,0 -0.4596,-1.203 -1.1209,-1.513 0,0 -0.9233,-0.649 0.064,-0.63 0,0 1.0040,0.08 1.5564,1.066 0.8830,1.596 2.3629,1.137 2.9395,0.864 0.092,-0.661 0.354,-1.120 0.6451,-1.393 -2.2540,-0.256 -4.5282,-0.591 -4.5282,-4.569 0,-1.137 0.3064,-1.707 0.9516,-2.43 C 6.5080,8.823 6.1653,7.7153 6.717,6.2844 7.5604,6.0156 9.5,7.4010 9.5,7.4010 10.306,7.169 11.173,7.049 12.032,7.049 c 0.858,0 1.725,0.119 2.532,0.3515 0,0 1.939,-1.3895 2.782,-1.1166 0.552,1.435 0.209,2.5392 0.104,2.8080 0.645,0.7319 1.040,1.302 1.040,2.43 0,3.990 -2.375,4.309 -4.629,4.569 0.370,0.326 0.685,0.947 0.685,1.918 0,1.393 -0.0,3.118 -0.0,3.457 0,0.268 0.185,0.595 0.697,0.500 C 19.266,20.601 22,16.677 22,12.090 22,6.3547 17.46,2.0000 11.870,2.0000 Z\"></path> <path d=\"m 5.4838,15.928 c -0.028,0.05 0.012,0.119 0.092,0.161 0.064,0.04 0.1451,0.02 0.1733,-0.02 0.028,-0.05 -0.012,-0.119 -0.092,-0.161 -0.080,-0.02 -0.1451,-0.01 -0.1733,0.02 z\"></path> <path d=\"m 5.9193,16.263 c -0.052,0.04 -0.040,0.136 0.028,0.215 0.064,0.06 0.1572,0.09 0.2096,0.04 0.052,-0.04 0.040,-0.136 -0.028,-0.215 -0.064,-0.06 -0.1572,-0.09 -0.2096,-0.04 z\"></path> <path d=\"m 6.3306,16.792 c -0.064,0.04 -0.064,0.148 0,0.244 0.064,0.09 0.173,0.136 0.2258,0.09 0.064,-0.05 0.064,-0.161 0,-0.256 -0.056,-0.09 -0.1612,-0.136 -0.2258,-0.08 z\"></path> <path d=\"m 6.7903,17.40 c -0.064,0.05 -0.040,0.17 0.052,0.256 0.092,0.09 0.2096,0.107 0.2620,0.04 0.052,-0.05 0.028,-0.17 -0.052,-0.256 -0.08,-0.09 -0.2096,-0.107 -0.2620,-0.04 z\"></path> <path d=\"m 7.4354,17.917 c -0.028,0.08 0.052,0.177 0.1733,0.202 0.1048,0.04 0.2258,0 0.25,-0.08 0.024,-0.08 -0.052,-0.17 -0.1733,-0.21 -0.1048,-0.02 -0.2217,0.01 -0.25,0.09 z\"></path> <path d=\"m 8.6895,18.10 c 0,0.08 -0.092,0.148 -0.2096,0.148 -0.1330,0.01 -0.2258,-0.05 -0.2258,-0.148 0,-0.08 0.092,-0.148 0.2096,-0.148 0.1209,-0.01 0.2258,0.05 0.2258,0.148 z\"></path> <path d=\"m 9.217,17.847 c -0.1169,0.02 -0.1975,0.107 -0.1854,0.202 0.012,0.08 0.1169,0.136 0.2379,0.107 0.1169,-0.02 0.1975,-0.107 0.1854,-0.190 -0.012,-0.07 -0.1209,-0.132 -0.2379,-0.119 z\"></path></g>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = svgFill().Render(templ.WithChildren(ctx, templ_7745c5c3_Var3), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
